name: azure.governance.pullrequest$(Rev:.r)

trigger: none

pr:
  branches:
    include:
      - feature/*
      - hotfix/*
  paths:
    include:
      - src/terraform
    exclude:
      - pipelines/*
      - src/ops
      - src/setup

variables:
  - name: TF_INPUT
    value: "false"
  - name: TF_IN_AUTOMATION
    value: "true"
  - name: TF_VERSION
    value: 0.14.5

stages:
  - stage: terraform

    variables:
      - group: azuregovernancedev
      - group: azuregovernancedevsecret

    jobs:
      - job: terraformTestDev
        displayName: Terraform (Dev)
        variables:
          - group: azuregovernancedev
          - group: azuregovernancedevsecret

        pool:
          vmImage: "ubuntu-latest"

        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['TF_VERSION'] }}
          endpoint: rjfmachado.containers

        steps:
          - template: /pipelines/templates/tf-init-plan.yaml
            parameters:
              tfDir: src/terraform
              tfCliInit: -backend=true -backend-config=dev.stage
              tfCliPlan: -out test.dev.plan -var-file=dev.tfvars.json
          - template: /pipelines/templates/tf-showplan.yaml
            parameters:
              tfDir: src/terraform
              tfCliShow: -json test.dev.plan | jq '.' > test.dev.plan.json
          - template: /pipelines/templates/pester-run-publish.yaml
            parameters:
              pesterDir: src/test/pr
              serviceConnection: azuregovernancePesterDev

      - job: terraformTestProd
        displayName: Terraform (Prod)
        variables:
          - group: azuregovernanceprod
          - group: azuregovernanceprodsecret
        pool:
          vmImage: "ubuntu-latest"
        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['TF_VERSION'] }}
          endpoint: rjfmachado.containers
        steps:
          - template: /pipelines/templates/tf-init-plan.yaml
            parameters:
              tfDir: src/terraform
              tfCliInit: -backend=true -backend-config=prod.stage
              tfCliPlan: -out test.prod.plan  -var-file=prod.tfvars.json
          - template: /pipelines/templates/tf-showplan.yaml
            parameters:
              tfDir: src/terraform
              tfCliShow: -json test.prod.plan | jq '.' > test.dev.plan.json
          - template: /pipelines/templates/pester-run-publish.yaml
            parameters:
              pesterDir: src/test/pr
              serviceConnection: azuregovernancePesterProd
