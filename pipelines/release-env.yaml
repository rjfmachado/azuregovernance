name: azure.governance.envrelease$(Rev:.r)

trigger: none

pr: none

variables:
  - name: TF_VERSION
    value: 0.14.4
  - name: TF_INPUT
    value: "false"
  - name: TF_IN_AUTOMATION
    value: "true"

stages:
  - stage: publishArtifacts

    jobs:
      - job: publishTerraform
        displayName: Publish Azure Governance Terraform files/plans.

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - publish: src/terraform
            displayName: "Release Azure Governance."
            artifact: releaseAzureGovernance
            enabled: "true"

      - job: publishDevPlan
        displayName: Publish dev plan
        variables:
          - group: azuregovernancedev
          - group: azuregovernancedevsecret

        pool:
          vmImage: "ubuntu-latest"

        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['TF_VERSION'] }}
          endpoint: rjfmachado.containers

        steps:
          - template: /pipelines/templates/tf-init-plan.yaml
            parameters:
              tfDir: src/terraform
              tfCliInit: -backend=true -backend-config=dev.stage
              tfCliPlan: -out dev.plan -var-file=dev.tfvars.json

          - publish: src/terraform/dev.plan
            displayName: "Publish Dev Plan"
            artifact: releaseAzureGovernance.devplan
            enabled: "true"

      - job: publishProdPlan
        displayName: Publish prod plan
        variables:
          - group: azuregovernanceprod
          - group: azuregovernanceprodsecret
        pool:
          vmImage: "ubuntu-latest"
        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['TF_VERSION'] }}
          endpoint: rjfmachado.containers
        steps:
          - template: /pipelines/templates/tf-init-plan.yaml
            parameters:
              tfDir: src/terraform
              tfCliInit: -backend=true -backend-config=prod.stage
              tfCliPlan: -out prod.plan  -var-file=prod.tfvars.json

          - publish: src/terraform/prod.plan
            displayName: "Publish Prod Plan"
            artifact: releaseAzureGovernance.prodplan
            enabled: "true"

  - stage: dev

    variables:
      - group: azuregovernancedev
      - group: azuregovernancedevsecret

    jobs:
      - deployment: TerraformApplyPlan
        displayName: Terraform (Apply Plan)

        pool:
          vmImage: "ubuntu-latest"

        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['TF_VERSION'] }}
          endpoint: rjfmachado.containers

        continueOnError: false
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
                - template: /pipelines/templates/tf-init-applyplan.yaml
                  parameters:
                    tfDir: $(Agent.BuildDirectory)/releaseAzureGovernance
                    tfCliInit: -backend=true -backend-config=$(Agent.BuildDirectory)/releaseAzureGovernance/dev.stage
                    tfCliApply: $(Agent.BuildDirectory)/releaseAzureGovernance.devplan/dev.plan

  - stage: prod

    variables:
      - group: azuregovernanceprod
      - group: azuregovernanceprodsecret

    jobs:
      - deployment: TerraformApplyPlan
        displayName: Terraform (Apply Plan)

        pool:
          vmImage: "ubuntu-latest"

        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['TF_VERSION'] }}
          endpoint: rjfmachado.containers

        continueOnError: false
        environment: prod
        strategy:
          runOnce:
            deploy:
              steps:
                - template: /pipelines/templates/tf-init-applyplan.yaml
                  parameters:
                    tfDir: $(Agent.BuildDirectory)/releaseAzureGovernance
                    tfCliInit: -backend=true -backend-config=$(Agent.BuildDirectory)/releaseAzureGovernance/prod.stage
                    tfCliApply: $(Agent.BuildDirectory)/releaseAzureGovernance.prodplan/prod.plan
